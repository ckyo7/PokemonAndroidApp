// Generated by view binder compiler. Do not edit!
package com.example.pokemonsapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.pokemonsapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPokemonDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView pokemonBaseExp;

  @NonNull
  public final TextView pokemonHeight;

  @NonNull
  public final ImageView pokemonImage;

  @NonNull
  public final TextView pokemonName;

  @NonNull
  public final TextView pokemonType;

  @NonNull
  public final TextView pokemonType2;

  @NonNull
  public final TextView pokemonWeight;

  @NonNull
  public final RecyclerView rvAbilities;

  private FragmentPokemonDetailBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView pokemonBaseExp, @NonNull TextView pokemonHeight,
      @NonNull ImageView pokemonImage, @NonNull TextView pokemonName, @NonNull TextView pokemonType,
      @NonNull TextView pokemonType2, @NonNull TextView pokemonWeight,
      @NonNull RecyclerView rvAbilities) {
    this.rootView = rootView;
    this.pokemonBaseExp = pokemonBaseExp;
    this.pokemonHeight = pokemonHeight;
    this.pokemonImage = pokemonImage;
    this.pokemonName = pokemonName;
    this.pokemonType = pokemonType;
    this.pokemonType2 = pokemonType2;
    this.pokemonWeight = pokemonWeight;
    this.rvAbilities = rvAbilities;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPokemonDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPokemonDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_pokemon_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPokemonDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.pokemon_base_exp;
      TextView pokemonBaseExp = ViewBindings.findChildViewById(rootView, id);
      if (pokemonBaseExp == null) {
        break missingId;
      }

      id = R.id.pokemon_height;
      TextView pokemonHeight = ViewBindings.findChildViewById(rootView, id);
      if (pokemonHeight == null) {
        break missingId;
      }

      id = R.id.pokemonImage;
      ImageView pokemonImage = ViewBindings.findChildViewById(rootView, id);
      if (pokemonImage == null) {
        break missingId;
      }

      id = R.id.pokemonName;
      TextView pokemonName = ViewBindings.findChildViewById(rootView, id);
      if (pokemonName == null) {
        break missingId;
      }

      id = R.id.pokemonType;
      TextView pokemonType = ViewBindings.findChildViewById(rootView, id);
      if (pokemonType == null) {
        break missingId;
      }

      id = R.id.pokemonType2;
      TextView pokemonType2 = ViewBindings.findChildViewById(rootView, id);
      if (pokemonType2 == null) {
        break missingId;
      }

      id = R.id.pokemon_weight;
      TextView pokemonWeight = ViewBindings.findChildViewById(rootView, id);
      if (pokemonWeight == null) {
        break missingId;
      }

      id = R.id.rv_abilities;
      RecyclerView rvAbilities = ViewBindings.findChildViewById(rootView, id);
      if (rvAbilities == null) {
        break missingId;
      }

      return new FragmentPokemonDetailBinding((ConstraintLayout) rootView, pokemonBaseExp,
          pokemonHeight, pokemonImage, pokemonName, pokemonType, pokemonType2, pokemonWeight,
          rvAbilities);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
